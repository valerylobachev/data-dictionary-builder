// Code generated by Data Dictionary Builder (c) Valery Lobachev (https://github.com/valerylobachev/data-dictionary-builder)
// Date: 2024-08-19 17:06:07

package entity

import (
  "github.com/shopspring/decimal"
  "time"
)

const (
  LedgerEntryTableName = "ledger_entry.ledger_entries"
  LedgerEntryPK = "ledger_entries_pkey"
  LedgerEntryFKLedgerId = "ledger_entries_ledger_id"
  LedgerEntryFKCompanyCodeId = "ledger_entries_company_code_id"
  LedgerEntryFKGlAccountId = "ledger_entries_gl_account_id"
  LedgerEntryFKCreditorId = "ledger_entries_creditor_id"
  LedgerEntryFKDebtorId = "ledger_entries_debtor_id"
  LedgerEntryFKBusinessPartnerId = "ledger_entries_business_partner_id"
  LedgerEntryFKBusinessAreaId = "ledger_entries_business_area_id"
  LedgerEntryFKFunctionalAreaId = "ledger_entries_functional_area_id"
  LedgerEntryFKSegmentId = "ledger_entries_segment_id"
  LedgerEntryFKValuationAreaId = "ledger_entries_valuation_area_id"
  LedgerEntryFKPlantId = "ledger_entries_plant_id"
  LedgerEntryFKLocationId = "ledger_entries_location_id"
  LedgerEntryFKMaterialId = "ledger_entries_material_id"
  LedgerEntryFKDocumentCurrencyId = "ledger_entries_document_currency_id"
  LedgerEntryFKCompanyCodeCurrencyId = "ledger_entries_company_code_currency_id"
  LedgerEntryFKUomId = "ledger_entries_uom_id"
  LedgerEntryFKBasicUomId = "ledger_entries_basic_uom_id"
  LedgerEntryUQNk = "ledger_entries_nk"
)


// Ledger Entry
type LedgerEntryEntity struct {
    // Entry no
    EntryNo string `gorm:"column:entry_no;primaryKey;not null"`
    // Ledger Id
    LedgerId string `gorm:"column:ledger_id;not null"`
    // Company code
    CompanyCodeId string `gorm:"column:company_code_id;not null"`
    // Fiscal year
    FiscalYear int `gorm:"column:fiscal_year;not null"`
    // Document number
    DocumentNumber string `gorm:"column:document_number;not null"`
    // Line item no
    LineItemNo string `gorm:"column:line_item_no;not null"`
    // Posting date
    PostingDate string `gorm:"column:posting_date;not null"`
    // Document date
    DocumentDate string `gorm:"column:document_date;not null"`
    // Valuation date
    ValuationDate string `gorm:"column:valuation_date;not null"`
    // Period
    Period int `gorm:"column:period;not null"`
    // Fiscal year period
    FyPeriod int `gorm:"column:fy_period;not null"`
    // Chart of accounts id
    ChartOfAccountsId string `gorm:"column:chart_of_accounts_id;not null"`
    // General ledger account id
    GlAccountId string `gorm:"column:gl_account_id;not null"`
    // Creditor id
    CreditorId *string `gorm:"column:creditor_id"`
    // Debtor id
    DebtorId *string `gorm:"column:debtor_id"`
    // Business partner id
    BusinessPartnerId *string `gorm:"column:business_partner_id"`
    // Business area id
    BusinessAreaId *string `gorm:"column:business_area_id"`
    // Functional area id
    FunctionalAreaId *string `gorm:"column:functional_area_id"`
    // Segment id
    SegmentId *string `gorm:"column:segment_id"`
    // Valuation area id
    ValuationAreaId *string `gorm:"column:valuation_area_id"`
    // Plant id
    PlantId *string `gorm:"column:plant_id"`
    // Location id
    LocationId *string `gorm:"column:location_id"`
    // Material id
    MaterialId *string `gorm:"column:material_id"`
    // Debit/credit indicator
    DebitCredit string `gorm:"column:debit_credit;not null"`
    // Document amount
    DocumentAmount decimal.Decimal `gorm:"column:document_amount;not null"`
    // Document currency
    DocumentCurrencyId string `gorm:"column:document_currency_id;not null"`
    // Company code amount
    CompanyCodeAmount decimal.Decimal `gorm:"column:company_code_amount;not null"`
    // Company code currency
    CompanyCodeCurrencyId string `gorm:"column:company_code_currency_id;not null"`
    // Quantity
    Quantity *decimal.Decimal `gorm:"column:quantity"`
    // Unit of measure id
    UomId *string `gorm:"column:uom_id"`
    // Basic unit of measure id
    BasicUomId *string `gorm:"column:basic_uom_id"`
    // User created record
    CreatedBy string `gorm:"column:created_by;not null"`
    // Timestamp of record create
    CreatedAt time.Time `gorm:"column:created_at;not null"`
    // User updated record
    UpdatedBy string `gorm:"column:updated_by;not null"`
    // Timestamp of record update
    UpdatedAt time.Time `gorm:"column:updated_at;not null"`
}


func (*LedgerEntryEntity) TableName() string {
	return LedgerEntryTableName
}
