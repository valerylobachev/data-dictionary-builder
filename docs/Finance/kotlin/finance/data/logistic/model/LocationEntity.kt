// Code generated by Data Dictionary Builder (https://github.com/valerylobachev/data-dictionary-builder).

package finance.data.logistic.model

import jakarta.persistence.*
import java.time.Instant
import finance.data.ledger_entry.model.LedgerEntryEntity


/**
 * Location
 */
@Entity
@Table(name = "locations", schema = "logistic")
@IdClass(LocationId::class)
data class LocationEntity(

    /**
     * Plant id
     */
    @Id
    @Column(name = "plant_id", nullable = false, length = 4)
    var plantId: String,

    /**
     * Location id
     */
    @Id
    @Column(name = "location_id", nullable = false, length = 10)
    var locationId: String,

    /**
     * Name
     */
    @Column(name = "name", nullable = false, length = 100)
    var name: String,

    /**
     * Short name
     */
    @Column(name = "short_name", nullable = false, length = 20)
    var shortName: String,

    /**
     * User created record
     */
    @Column(name = "created_by", nullable = false, length = 20)
    var createdBy: String,

    /**
     * Timestamp of record create
     */
    @Column(name = "created_at", nullable = false)
    var createdAt: Instant,

    /**
     * User updated record
     */
    @Column(name = "updated_by", nullable = false, length = 20)
    var updatedBy: String,

    /**
     * Timestamp of record update
     */
    @Column(name = "updated_at", nullable = false)
    var updatedAt: Instant,

    /**
     * Reference to Plant
     */
    @ManyToOne
    @JoinColumn(name = "plant_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var plant: PlantEntity? = null,

    /**
     * Reference to Location
     */
    @OneToMany(mappedBy = "location")
    var ledgerEntry: Collection<LedgerEntryEntity>? = null,
) 