// Code generated by Data Dictionary Builder (https://github.com/valerylobachev/data-dictionary-builder).

package finance.data.company_code.model

import jakarta.persistence.*
import java.time.Instant
import finance.data.common.model.LanguageEntity
import finance.data.ledger_entry.model.LedgerEntryEntity
import finance.data.gl_account.model.ChartOfAccountsEntity
import finance.data.common.model.CountryEntity
import finance.data.common.model.CurrencyEntity
import finance.data.logistic.model.ValuationAreaEntity


/**
 * Company code
 */
@Entity
@Table(name = "company_codes", schema = "company_code")
data class CompanyCodeEntity(

    /**
     * Company code
     */
    @Id
    @Column(name = "id", nullable = false, length = 4)
    var id: String,

    /**
     * Name
     */
    @Column(name = "name", nullable = false, length = 100)
    var name: String,

    /**
     * Country Id
     */
    @Column(name = "country_id", nullable = false, length = 3)
    var countryId: String,

    /**
     * Language Id
     */
    @Column(name = "language_id", nullable = false, length = 3)
    var languageId: String,

    /**
     * Currency Id
     */
    @Column(name = "currency_id", nullable = false, length = 5)
    var currencyId: String,

    /**
     * Chart of accounts id
     */
    @Column(name = "chart_of_accounts_id", nullable = false, length = 4)
    var chartOfAccountsId: String,

    /**
     * Fiscal year variant id
     */
    @Column(name = "fy_variant_id", nullable = false, length = 2)
    var fyVariantId: String,

    /**
     * Posting period variant id
     */
    @Column(name = "posting_period_variant_id", nullable = false, length = 4)
    var postingPeriodVariantId: String,

    /**
     * User created record
     */
    @Column(name = "created_by", nullable = false, length = 20)
    var createdBy: String,

    /**
     * Timestamp of record create
     */
    @Column(name = "created_at", nullable = false)
    var createdAt: Instant,

    /**
     * User updated record
     */
    @Column(name = "updated_by", nullable = false, length = 20)
    var updatedBy: String,

    /**
     * Timestamp of record update
     */
    @Column(name = "updated_at", nullable = false)
    var updatedAt: Instant,

    /**
     * Reference to Country
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "country_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var country: CountryEntity? = null,

    /**
     * Reference to Language
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "language_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var language: LanguageEntity? = null,

    /**
     * Reference to Currency
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "currency_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var currency: CurrencyEntity? = null,

    /**
     * Reference to ChartOfAccounts
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "chart_of_accounts_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var chartOfAccounts: ChartOfAccountsEntity? = null,

    /**
     * Reference to FYVariant
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "fy_variant_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var fYVariant: FYVariantEntity? = null,

    /**
     * Reference to PostingPeriodVariant
     */
    @JsonIgnore
    @ManyToOne
    @JoinColumn(name = "posting_period_variant_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var postingPeriodVariant: PostingPeriodVariantEntity? = null,

    /**
     * Reference to CompanyCode
     */
    @JsonIgnore
    @OneToMany(mappedBy = "valuationArea")
    var valuationArea: Collection<ValuationAreaEntity>? = null,

    /**
     * Reference to CompanyCode
     */
    @JsonIgnore
    @OneToMany(mappedBy = "companyCodeLedger")
    var companyCodeLedger: Collection<CompanyCodeLedgerEntity>? = null,

    /**
     * Reference to CompanyCode
     */
    @JsonIgnore
    @OneToMany(mappedBy = "companyCode")
    var ledgerEntry: Collection<LedgerEntryEntity>? = null,
) 