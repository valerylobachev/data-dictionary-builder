{
  "id" : "Simple",
  "name" : "Simple Example",
  "description" : "This example provides simple person group data model",
  "rootComponents" : [
    "Shared",
    "PersonGroup"
  ],
  "components" : [
    {
      "id" : "Shared",
      "name" : "Shared data structures",
      "description" : "",
      "parent" : null,
      "children" : [
      ],
      "schema" : null,
      "labels" : {
        
      }
    },
    {
      "id" : "PersonGroup",
      "name" : "Person Group Model",
      "description" : "",
      "parent" : null,
      "children" : [
      ],
      "schema" : null,
      "labels" : {
        
      }
    }
  ],
  "entities" : [
    {
      "id" : "Modification",
      "componentId" : "Shared",
      "name" : "Modification data structure",
      "description" : "",
      "entityName" : "Modification",
      "tableName" : "modifications",
      "entityType" : "embedded",
      "fields" : [
        {
          "name" : "User updated record",
          "description" : "",
          "fieldName" : "updatedBy",
          "dbFieldName" : "updated_by",
          "dataType" : {
            "StringVarchar" : {
              "length" : 20,
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "Timestamp of record update",
          "description" : "",
          "fieldName" : "updatedAt",
          "dbFieldName" : "updated_at",
          "dataType" : {
            "InstantTimestamp" : {
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        }
      ],
      "pk" : [
      ],
      "indexes" : [
      ],
      "relations" : [
      ],
      "schema" : null,
      "labels" : {
        
      },
      "expandedFields" : [
      ],
      "expandedRelations" : [
      ]
    },
    {
      "id" : "Person",
      "componentId" : "PersonGroup",
      "name" : "Person",
      "description" : "",
      "entityName" : "Person",
      "tableName" : "persons",
      "entityType" : "table",
      "fields" : [
        {
          "name" : "Person Id",
          "description" : "",
          "fieldName" : "id",
          "dbFieldName" : "id",
          "dataType" : {
            "DataElementType" : {
              "dataElementId" : "PersonId"
            }
          },
          "notNull" : true,
          "autoIncrement" : true,
          "labels" : {
            
          }
        },
        {
          "name" : "Person first name",
          "description" : "",
          "fieldName" : "firstname",
          "dbFieldName" : "firstname",
          "dataType" : {
            "StringVarchar" : {
              "length" : 40,
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "Person last name",
          "description" : "",
          "fieldName" : "lastname",
          "dbFieldName" : "lastname",
          "dataType" : {
            "StringVarchar" : {
              "length" : 40,
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "Search index",
          "description" : "",
          "fieldName" : "search",
          "dbFieldName" : "search",
          "dataType" : {
            "StringText" : {
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            "postgresDataType" : "tsvector"
          }
        },
        {
          "name" : "Person attributes",
          "description" : "Map string: string",
          "fieldName" : "attributes",
          "dbFieldName" : "attributes",
          "dataType" : {
            "StringJsonB" : {
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            "kotlinDataType" : "Map<String, String>",
            "goDataType" : "map[string]string"
          }
        },
        {
          "name" : "Person external Ids",
          "description" : "",
          "fieldName" : "externalIds",
          "dbFieldName" : "external_ids",
          "dataType" : {
            "DataElementType" : {
              "dataElementId" : "ExternalIds"
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "",
          "description" : "",
          "fieldName" : "",
          "dbFieldName" : "",
          "dataType" : {
            "EmbeddedEntityType" : {
              "entityId" : "Modification",
              "withPrefix" : false,
              "withRelations" : false
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        }
      ],
      "pk" : [
        "id"
      ],
      "indexes" : [
        {
          "id" : "lastnameFirstname",
          "name" : "Search index by lastname and firstname",
          "description" : "",
          "unique" : false,
          "fields" : [
            "lastname",
            "firstname"
          ],
          "labels" : {
            
          }
        }
      ],
      "relations" : [
      ],
      "schema" : null,
      "labels" : {
        
      },
      "expandedFields" : [
      ],
      "expandedRelations" : [
      ]
    },
    {
      "id" : "Group",
      "componentId" : "PersonGroup",
      "name" : "Group",
      "description" : "",
      "entityName" : "Group",
      "tableName" : "groups",
      "entityType" : "table",
      "fields" : [
        {
          "name" : "Group Id",
          "description" : "",
          "fieldName" : "id",
          "dbFieldName" : "id",
          "dataType" : {
            "DataElementType" : {
              "dataElementId" : "GroupId"
            }
          },
          "notNull" : true,
          "autoIncrement" : true,
          "labels" : {
            
          }
        },
        {
          "name" : "Group name",
          "description" : "",
          "fieldName" : "name",
          "dbFieldName" : "name",
          "dataType" : {
            "StringVarchar" : {
              "length" : 100,
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "",
          "description" : "",
          "fieldName" : "",
          "dbFieldName" : "",
          "dataType" : {
            "EmbeddedEntityType" : {
              "entityId" : "Modification",
              "withPrefix" : false,
              "withRelations" : false
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        }
      ],
      "pk" : [
        "id"
      ],
      "indexes" : [
      ],
      "relations" : [
      ],
      "schema" : null,
      "labels" : {
        
      },
      "expandedFields" : [
      ],
      "expandedRelations" : [
      ]
    },
    {
      "id" : "GroupMember",
      "componentId" : "PersonGroup",
      "name" : "Group member",
      "description" : "",
      "entityName" : "GroupMember",
      "tableName" : "group_members",
      "entityType" : "table",
      "fields" : [
        {
          "name" : "Group member id",
          "description" : "",
          "fieldName" : "id",
          "dbFieldName" : "id",
          "dataType" : {
            "IntInt" : {
              "defaultValue" : null
            }
          },
          "notNull" : true,
          "autoIncrement" : true,
          "labels" : {
            
          }
        },
        {
          "name" : "Group Id",
          "description" : "",
          "fieldName" : "groupId",
          "dbFieldName" : "group_id",
          "dataType" : {
            "DataElementType" : {
              "dataElementId" : "GroupId"
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "Person Id",
          "description" : "",
          "fieldName" : "personId",
          "dbFieldName" : "person_id",
          "dataType" : {
            "DataElementType" : {
              "dataElementId" : "PersonId"
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        },
        {
          "name" : "",
          "description" : "",
          "fieldName" : "",
          "dbFieldName" : "",
          "dataType" : {
            "EmbeddedEntityType" : {
              "entityId" : "Modification",
              "withPrefix" : false,
              "withRelations" : false
            }
          },
          "notNull" : true,
          "autoIncrement" : false,
          "labels" : {
            
          }
        }
      ],
      "pk" : [
        "id"
      ],
      "indexes" : [
        {
          "id" : "personGroupIds",
          "name" : "Person id in each group must be unique",
          "description" : "",
          "unique" : true,
          "fields" : [
            "groupId",
            "personId"
          ],
          "labels" : {
            
          }
        }
      ],
      "relations" : [
        {
          "id" : "groupId",
          "name" : "Relation to groups",
          "description" : "",
          "relationType" : "ManyToOne",
          "referenceEntityId" : "Group",
          "fields" : [
            [
              "groupId",
              "id"
            ]
          ],
          "onUpdate" : "NoAction",
          "onDelete" : "NoAction",
          "labels" : {
            
          },
          "logical" : false,
          "association" : {
            "name" : "group",
            "referenceName" : "members"
          }
        },
        {
          "id" : "personId",
          "name" : "Relation to persons",
          "description" : "",
          "relationType" : "ManyToOne",
          "referenceEntityId" : "Person",
          "fields" : [
            [
              "personId",
              "id"
            ]
          ],
          "onUpdate" : "NoAction",
          "onDelete" : "NoAction",
          "labels" : {
            
          },
          "logical" : true,
          "association" : {
            "name" : "person",
            "referenceName" : null
          }
        }
      ],
      "schema" : null,
      "labels" : {
        
      },
      "expandedFields" : [
      ],
      "expandedRelations" : [
      ]
    }
  ],
  "dataElements" : [
    {
      "id" : "PersonId",
      "name" : "Person Id",
      "description" : "",
      "fieldName" : "personId",
      "dbFieldName" : "person_id",
      "dataType" : {
        "IntInt" : {
          "defaultValue" : null
        }
      },
      "notNull" : true,
      "labels" : {
        
      },
      "componentId" : null
    },
    {
      "id" : "GroupId",
      "name" : "Group Id",
      "description" : "",
      "fieldName" : "groupId",
      "dbFieldName" : "group_id",
      "dataType" : {
        "ShortSmallint" : {
          "defaultValue" : null
        }
      },
      "notNull" : true,
      "labels" : {
        
      },
      "componentId" : null
    },
    {
      "id" : "ExternalIds",
      "name" : "External Ids",
      "description" : "",
      "fieldName" : "externalIds",
      "dbFieldName" : "external_ids",
      "dataType" : {
        "StringJsonB" : {
          "defaultValue" : null
        }
      },
      "notNull" : true,
      "labels" : {
        "kotlinDataType" : "Map<String, Int>",
        "goDataType" : "map[string]int"
      },
      "componentId" : null
    }
  ],
  "enums" : [
  ],
  "labels" : {
    "goModelPackage" : "github.com/valerylobachev/simple/logic/repository/entity",
    "auditTable" : "audit"
  }
}