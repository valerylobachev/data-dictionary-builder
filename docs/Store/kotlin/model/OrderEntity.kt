// Code generated by Data Dictionary Builder (https://github.com/valerylobachev/data-dictionary-builder).

package model

import jakarta.persistence.*
import java.time.Instant


/**
 * Order
 */
@Entity
@Table(name = "order_orders_table")
data class OrderEntity(

    /**
     * Order Id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    var id: Int,

    /**
     * Order name
     */
    @Column(name = "name", nullable = false, length = 100)
    var name: String,

    /**
     * Description
     */
    @Column(name = "description")
    var description: String? = null,

    /**
     * Client Id
     */
    @Column(name = "client_id", nullable = false)
    var clientId: Int,

    /**
     * Delivery address
     */
    @Column(name = "delivery_address_id", nullable = false)
    var deliveryAddressId: Int,

    /**
     * Order status
     */
    @Column(name = "status", nullable = false, length = 1)
    var status: String,

    /**
     * Promotion Id
     */
    @Column(name = "promotion_id", length = 10)
    var promotionId: String? = null,

    /**
     * Segment Id
     */
    @Column(name = "segment_id", length = 10)
    var segmentId: String? = null,

    /**
     * Business Area Id
     */
    @Column(name = "business_area_id", length = 10)
    var businessAreaId: String? = null,

    /**
     * User created record
     */
    @Column(name = "created_by", nullable = false, length = 10)
    var createdBy: String,

    /**
     * Timestamp of record create
     */
    @Column(name = "created_at", nullable = false)
    var createdAt: Instant,

    /**
     * User updated record
     */
    @Column(name = "updated_by", nullable = false, length = 10)
    var updatedBy: String,

    /**
     * Timestamp of record update
     */
    @Column(name = "updated_at", nullable = false)
    var updatedAt: Instant,

    /**
     * Reference to client
     */
    @ManyToOne
    @JoinColumn(name = "client_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false)
    var client: ClientEntity? = null,

    /**
     * Reference to address
     */
    @ManyToOne
    @JoinColumn([
      @JoinColumn(name = "client_id", referencedColumnName = "client_id", nullable = false, updatable = false, insertable = false),
      @JoinColumn(name = "delivery_address_id", referencedColumnName = "id", nullable = false, updatable = false, insertable = false),
    ])
    var clientAddress: ClientAddressEntity? = null,

    /**
     * Reference to order
     */
    @OneToMany(mappedBy = "orderLine")
    var orderLine: Collection<OrderLineEntity>? = null,
) 